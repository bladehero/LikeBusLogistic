@model Logistic.Web.Models.Routes.FullInformationVM

<ul uk-tab>
    <li class="uk-active"><a href="#">Routes</a></li>
</ul>
<ul class="uk-switcher uk-margin">
    <li data-content-url="@Url.Action("_Routes", "Route")"></li>
</ul>

<script>
    App.footer.setBreadcrumbs(null);
    App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
    App.geo.route.clear();
    App.tab.name = 'route';
    App.geo.onClickLocation(function (obj, location) {
        let selector = "marker_" + location.marker._leaflet_id;
        let popup = location.marker.getPopup();
        if (location.marker.isPopupOpen()) {
            return;
        }
        let width = window.innerWidth * 0.75;
        width = width > 400 ? 400 : width;
        if (!popup) {
            location.marker.bindPopup('<div style="width: ' + width + 'px; min-height: 72px;" id="' + selector + '"></div>', { maxWidth: width }).openPopup();
            popup = location.marker.getPopup();
        }
        selector = '#' + selector;
        App.loadContent(
            selector,
            '@Url.Action("_LocationPopup" , "Home")',
            { id: location.data.id, routeId: App.geo.route.id, isRoute: true },
            function (html) {
                popup.setContent(html);
            }
        );
    });

    function editLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        App.footer.getContent('@Url.Action("_FullInformation", "Geolocation", new { tab = GeolocationTab.Locations })',
            null,
            () => App.loadContent('#current-location-card', '@Url.Action("_Location", "Geolocation")', { id: id }));
        App.map.off('mousemove');
        App.map.off('click');
    }
    function deleteLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        Swal.fire({
            title: 'Deletion',
            text: 'Are you sure you want to delete?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'OK',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.value) {
                App.postDataOnServer('@Url.Action("DeleteOrRestoreLocation", "Geolocation")', { id: id }, function (result) {
                    App.message.showSuccessWithOk('Success', result.message || 'Location successfully deleted!');
                    App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
                });
            }
        });
    }

    $(document).off('click', '.edit-location-icon').on('click', '.edit-location-icon', editLocationFunction);
    $(document).off('click', '.delete-location-icon').on('click', '.delete-location-icon', deleteLocationFunction);
</script>
