@model Logistic.Web.Models.Geolocations.LocationVM

<div id="location-grid">
    <input type="hidden" name="id" value="@Model.Location?.Id" />
    <div class="uk-grid-small" uk-grid>
        <div class="uk-width-1-2@l">
            <label class="uk-form-label">Latitude:</label>
            <input class="uk-input uk-disabled" type="text" name="latitude" placeholder="Latitude..." value="@Model.Location?.Latitude">
        </div>
        <div class="uk-width-1-2@l">
            <label class="uk-form-label">Longitude:</label>
            <input class="uk-input uk-disabled" type="text" name="longitude" placeholder="Longitude..." value="@Model.Location?.Longitude">
        </div>
    </div>
    <div class="uk-grid-small" uk-grid>
        <div class="uk-width-1-1@l">
            <label class="uk-form-label">Name:</label>
            <input class="uk-input" type="text" name="name" id="location-name-input" placeholder="Name..." value="@Model.Location?.Name">
        </div>
        <div class="uk-width-1-1@l">
            <label class="uk-form-label"></label>
            <div class="uk-form-controls">
                @Model.Countries.SelectListWithEmptyOption(
                 x => x.Id,
                 x => x.Name,
                 "Select a country...",
                 Model.Location?.CountryId,
                 new { @class = "uk-select", name = "countryId" })
            </div>
        </div>
        <div class="uk-width-1-1@l">
            <label class="uk-form-label"></label>
            <div class="uk-form-controls">
                @Model.Districts.SelectListWithEmptyOption(
                 x => x.Id,
                 x => x.Name,
                 "Select a district...",
                 Model.Location?.DistrictId,
                 new { @class = "uk-select", name = "districtId" })
            </div>
        </div>
        <div class="uk-width-1-1@l">
            <label class="uk-form-label"></label>
            <div class="uk-form-controls">
                @Model.Cities.SelectListWithEmptyOption(
                 x => x.Id,
                 x => x.Name,
                 "Select a city...",
                 Model.Location?.CityId,
                 new { @class = "uk-select", name = "cityId" })
            </div>
        </div>
        <label><input class="uk-checkbox" name="IsParking" type="checkbox" @(Model.Location?.IsParking == true ? " checked" : "")> Parking</label>
        <label><input class="uk-checkbox" name="IsCarRepair" type="checkbox" @(Model.IsCarRepair ? "checked" : "") disabled> Repair</label>
    </div>
    <div class="uk-margin uk-flex uk-float-right">
        <button class="uk-button uk-button-danger uk-button-small uk-margin-small-right" id="cancel-location-btn">Cancel</button>
        <button class="uk-button uk-button-primary uk-button-small" id="save-location-btn">Save</button>
    </div>
</div>
<script src="~/js/location.js"></script>
<script>
    $('#save-location-btn').click(function () {
        var data = App.serializeInputsToObject('#location-grid input,select,checkbox');
        App.postDataOnServer('@Url.Action("MergeLocation", "Geolocation")', data, function (result) {
            App.footer.getContent('@Url.Action("_FullInformation", "Geolocation")');
            App.message.showSuccessWithOk('Success', result.message || 'Successfully executed!');
            App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
        });
    });
    $('select[name="countryId"]').change(function () {
        var _this = $(this);
        var id = _this.val();
        $.ajax({
            url: '@Url.Action("GetDistrictsByCountry", "Geolocation")',
            data: { id: id },
            success: function (result) {
                var districts = $('select[name="districtId"]');
                var first = districts.find('option').first();
                districts.html(first);
                if (result.success) {
                    var list = '';
                    for (var i = 0; i < result.data.length; i++) {
                        list += '<option value="' + result.data[i].id + '">' + result.data[i].name + '</option>';
                    }
                    districts.append(list);
                    districts.change();
                }
            }
        });
        $.ajax({
            url: '@Url.Action("GetCitiesByCountry", "Geolocation")',
            data: { id: id },
            success: function (result) {
                var cities = $('select[name="cityId"]');
                var first = cities.find('option').first();
                cities.html(first);
                if (result.success) {
                    var list = '';
                    for (var i = 0; i < result.data.length; i++) {
                        list += '<option value="' + result.data[i].id + '">' + result.data[i].name + '</option>';
                    }
                    cities.append(list);
                    cities.change();
                }
            }
        });
    });
    $('select[name="districtId"]').change(function () {
        var _this = $(this);
        var id = _this.val();
        $.ajax({
            url: '@Url.Action("GetCitiesByDistricts", "Geolocation")',
            data: { id: id },
            success: function (result) {
                var cities = $('select[name="cityId"]');
                var first = cities.find('option').first();
                cities.html(first);
                if (result.success) {
                    var list = '';
                    for (var i = 0; i < result.data.length; i++) {
                        list += '<option value="' + result.data[i].id + '">' + result.data[i].name + '</option>';
                    }
                    cities.append(list);
                    cities.change();
                }
            }
        });
    });
</script>