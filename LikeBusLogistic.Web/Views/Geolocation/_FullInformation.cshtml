@model LikeBusLogistic.Web.Models.Geolocations.FullInformationVM

<button id="toggler" href="#toggle-animation" class="uk-button uk-button-small uk-button-default uk-margin-small-bottom" type="button" uk-toggle="target: #toggle-animation; animation: uk-animation-fade">
    Свернуть
</button>
<div uk-grid>
    <div class="uk-width-1-4@l uk-width-1-1@m" id="toggle-animation">
        <div class="uk-card uk-card-default uk-card-body uk-margin-medium-bottom uk-card-hover" id="current-location-card">
            @{
                await Html.RenderPartialAsync("_Location.cshtml", new LikeBusLogistic.Web.Models.Geolocations.LocationVM
                {
                    Cities = Model.Cities,
                    Countries = Model.Countries,
                    Districts = Model.Districts
                });
            }
        </div>
    </div>
    <div class="uk-width-expand@l uk-width-1-1@m uk-margin-remove-top">
        <ul uk-tab>
            <li class="@(Model.Tab == GeolocationTab.Locations ? "uk-active" : "")"><a href="#">Локации</a></li>
            <li class="@(Model.Tab == GeolocationTab.Cities ? "uk-active" : "")"><a href="#">Города</a></li>
            <li class="@(Model.Tab == GeolocationTab.Districts ? "uk-active" : "")"><a href="#">Регионы</a></li>
            <li class="@(Model.Tab == GeolocationTab.Countries ? "uk-active" : "")"><a href="#">Страны</a></li>
        </ul>
        <ul class="uk-switcher uk-margin">
            <li>
                @{
                    await Html.RenderPartialAsync("_Locations.cshtml", Model.Locations);
                }
            </li>
            <li>
                @{
                    await Html.RenderPartialAsync("_Cities.cshtml", Model.Cities);
                }
            </li>
            <li>
                @{
                    await Html.RenderPartialAsync("_Districts.cshtml", Model.Districts);
                }
            </li>
            <li>
                @{
                    await Html.RenderPartialAsync("_Countries.cshtml", Model.Countries);
                }
            </li>
        </ul>
    </div>
</div>

<script>
    App.footer.setBreadcrumbs([{ name: 'Логистика', url: '@Url.Action("_FullInformation", "Geolocation")' }]);
    App.geo.route.clear();
    App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
    App.geo.onClickLocation(function (obj, location) {
        let selector = "marker_" + location.marker._leaflet_id;
        let popup = location.marker.getPopup();
        let width = window.innerWidth * 0.75;
        width = width > 400 ? 400 : width;
        if (!popup) {
            location.marker.bindPopup('<div style="width: ' + width + 'px; min-height: 72px;" id="' + selector + '"></div>', { maxWidth: width }).openPopup();
            popup = location.marker.getPopup();
        }
        selector = '#' + selector;
        App.loadContent(selector, '@Url.Action("_LocationPopup" , "Home")', { id: location.data.id },
            function (html) {
                $(selector).html(html);
        });
    });
    function editLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        App.loadContent('#current-location-card', '@Url.Action("_Location", "Geolocation")', { id: id });
        App.map.off('mousemove');
        App.map.off('click');
    }
    function deleteLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        Swal.fire({
            title: 'Удаление',
            text: 'Вы уверены, что хотите удалить?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Да',
            cancelButtonText: 'Отмена'
        }).then((result) => {
            if (result.value) {
                App.postDataOnServer('@Url.Action("DeleteOrRestoreLocation", "Geolocation")', { id: id }, function (result) {
                    App.message.showSuccessWithOk('Успешно', result.message || 'Локация успешно удалена!');
                    App.footer.getContent('@Url.Action("_FullInformation", "Geolocation", new { tab = GeolocationTab.Locations })');
                });
            }
        });
    }

    $(document).off('click', '.edit-location-icon').on('click', '.edit-location-icon', editLocationFunction);
    $(document).off('click', '.delete-location-icon').on('click', '.delete-location-icon', deleteLocationFunction);
</script>
