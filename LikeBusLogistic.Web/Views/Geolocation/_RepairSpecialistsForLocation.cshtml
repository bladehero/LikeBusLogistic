@model RepairSpecialistsForLocationVM

@{
    RoleName roleName = (RoleName)ViewBag.RoleName;
    var hasRepair = Model.RepairSpecialists?.Count() > 0;
}

<div uk-grid>
    <div class="uk-width-1-1 uk-margin-small-bottom uk-margin-remove-top">
        <p class="uk-text-bold">@Model.Location.Name</p>
    </div>
    <div class="uk-width-1-1 uk-margin-remove-bottom uk-margin-remove-top">
        @if (Model.Location.CityId.HasValue || Model.Location.CountryId.HasValue || Model.Location.DistrictId.HasValue)
        {
            <p class="uk-text-muted location-info">
                @if (!string.IsNullOrWhiteSpace(Model.Location.CountryName))
                {
                    <span>@Model.Location.CountryName</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Location.DistrictName))
                {
                    <span>@Model.Location.DistrictName</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Location.CityName))
                {
                    <span>@Model.Location.CityName</span>
                }
            </p>
        }
    </div>
</div>
<div class="uk-float-right">
    @if (roleName == RoleName.Administrator || roleName == RoleName.Moderator)
    {
        <button class="uk-button uk-button-small uk-button-primary"
                id="add-specialist-button"
                data-location-id="@Model.Location.Id">
            Добавить
        </button>
    }
</div>
<table class="uk-table uk-table-small uk-table-hover" id="specialists-table">
    <thead>
        <tr>
            <th>ФИО</th>
            <th>Контактные данные</th>
            <th></th>
        </tr>
    </thead>
    <tbody data-location-id="@Model.Location.Id">
        @if (hasRepair)
        {
            @foreach (var specialist in Model.RepairSpecialists)
            {
                <tr data-specialist-id="@specialist.Id">
                    <td>@specialist.Name</td>
                    <td>@specialist.Contact</td>
                    <td class="uk-float-right tool-cell-2">
                        @if (roleName == RoleName.Administrator || roleName == RoleName.Moderator)
                        {
                            @CustomExtensions.HtmlEditIcon("uk-margin-small-right edit-specialist-icon")
                        }
                        @if (roleName == RoleName.Administrator)
                        {
                            @CustomExtensions.HtmlDeleteOrRestoreIcon(specialist.IsDeleted, "delete-specialist-icon")
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        setTimeout(function () { $('#specialists-table').dataTable(); }, 250);
    });
    $('#add-specialist-button').click(function () {
        let locationId = $(this).data('location-id');
        Swal.mixin({
            input: 'textarea',
            confirmButtonText: 'Далее',
            showCancelButton: true,
            progressSteps: ['1', '2']
        }).queue([
            {
                title: 'ФИО',
                text: 'Введите имя специалиста по ремонту...'
            },
            {
                title: 'Контактные данные',
                text: 'Введите контактные данные...'
            }
        ]).then((result) => {
            if (result.value) {
                let name = result.value[0];
                let contact = result.value[1];
                App.postDataOnServer(
                    '@Url.Action("MergeRepairSpecialist", "Geolocation")',
                    { locationId: locationId, name: name, contact: contact },
                    function () {
                        App.loadContent(
                            '#specialists-modal div.uk-modal-body',
                            '@Url.Action("_RepairSpecialistsForLocation", "Geolocation")',
                            { locationId: locationId }
                        );
                        App.message.showSuccessWithOk('Добавлено', 'Успешно выполнено!');
                    }
                );
            }
        });
    });
    $('.edit-specialist-icon').click(async function () {
        let id = $(this).parents('tr').first().data('specialist-id');
        let locationId = $(this).parents('tbody').first().data('location-id');
        let name = '';
        let contact = '';

        App.postDataOnServer('@Url.Action("GetRepairSpecialist", "Geolocation")',
                             { specialistId: id },
                             (result) => { name = result.data.name; contact = result.data.contact; },
                             null,
                             'GET',
                             false);

        let formValues = await Swal.fire({
            title: 'Обновление контакта по ремонту',
            html: '<div class="uk-margin uk-text-left">'+
                  '    <label class="uk-form-label" for="form-stacked-text">Имя</label>'+
                  '    <div class="uk-form-controls">'+
                  '        <textarea style="height: 100px;" class="uk-input" id="specialist-name" type="text" placeholder="Введите имя..." rows="3">' + name + '</textarea>'+
                  '    </div>'+
                  '</div>'+
                  '<div class="uk-margin uk-text-left">'+
                  '    <label class="uk-form-label" for="form-stacked-text">Контакт</label>'+
                  '    <div class="uk-form-controls">'+
                  '        <textarea style="height: 100px;" class="uk-input" id="specialist-contacts" type="text" placeholder="Введите контакт..." rows="3">' + contact + '</textarea>'+
                  '    </div>'+
                  '</div>',
            focusConfirm: false,
            showCancelButton: true,
            cancelButtonText: "Отмена",
            preConfirm: () => {
                return [
                    $('#specialist-name').val(),
                    $('#specialist-contacts').val()
                ]
            }
        });

        if (formValues && formValues.value[0] && formValues.value[1]) {
            let name = formValues.value[0];
            let contact = formValues.value[1];
            App.postDataOnServer(
                '@Url.Action("MergeRepairSpecialist", "Geolocation")',
                { id: id, locationId: locationId, name: name, contact: contact },
                function () {
                    App.loadContent(
                        '#specialists-modal div.uk-modal-body',
                        '@Url.Action("_RepairSpecialistsForLocation", "Geolocation")',
                        { locationId: locationId }
                    );
                    App.message.showSuccessWithOk('Обновлено', 'Успешно выполнено!');
                }
            );
        }
    });
    $('.delete-specialist-icon').click(function () {
        let locationId = $(this).parents('tbody').data('location-id');
        var id = $(this).parents('tr').data('specialist-id');
        App.postDataOnServer(
            '@Url.Action("DeleteOrRestoreSpecialist", "Geolocation")',
            { id: id },
            function (result) {
                App.message.showSuccessWithOk('Успешно', result.message || 'Специалист успешно удален!');
                App.loadContent(
                    '#specialists-modal>div.uk-modal-body',
                    '@Url.Action("_RepairSpecialistsForLocation", "Geolocation")',
                    { locationId: id },
                    function () {
                        App.loadContent(
                            '#specialists-modal div.uk-modal-body',
                            '@Url.Action("_RepairSpecialistsForLocation", "Geolocation")',
                            { locationId: locationId }
                        );
                    }
                );
            }
        );
    });
</script>