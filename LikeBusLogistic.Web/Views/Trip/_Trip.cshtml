@model LikeBusLogistic.Web.Models.Trips.TripsVM
@{
    RoleName roleName = (RoleName)ViewBag.RoleName;
    Func<string, string> statusMapping = (string status) =>
    {
        var result = string.Empty;
        foreach (var tripStatus in Enum.GetValues(typeof(TripStatus)).Cast<TripStatus>())
        {
            if (tripStatus.ToString() == status)
            {
                result = tripStatus.GetDescription();
            }
        }
        return result;
    };
}
@*<div class="uk-clearfix">
    <div class="uk-float-right">
        <button class="uk-button uk-button-small uk-button-danger uk-hidden" id="clean-route-button">Сбросить маршрут</button>
        @if (roleName == RoleName.Administrator || roleName == RoleName.Moderator)
        {
            <button class="uk-button uk-button-small uk-button-primary" id="add-trip-button">Добавить</button>
        }
    </div>
</div>*@
<table class="uk-table uk-table-small uk-table-hover trips-table @Model.Tab.ToString().ToLower()">
    <thead>
        <tr>
            <th class="uk-visible@m datatable-no-sort"></th>
            <th>
                Расписание
                <span class="uk-hidden@s"> /<br />Отправление</span>
            </th>
            <th>
                Маршрут
                <span class="uk-hidden@s"> /<br />Статус</span>
            </th>
            <th class="uk-visible@s datatable-default-column">Отправка</th>
            <th class="uk-visible@s datatable-no-sort">Статус</th>
            <th class="uk-visible@s">Номер</th>
            <th class="uk-visible@l">Модель</th>
            <th class="uk-visible@m">Км</th>
            <th class="uk-visible@m datatable-no-sort tool-cell-3"></th>
            <th class="uk-hidden@m uk-table-shrink datatable-no-sort tool-cell-1"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var trip in Model.Trips)
        {
            <tr data-trip-id="@trip.Id" data-trip-color="@trip.Color" data-route-id="@trip.RouteId"
                class="@(trip.IsDeleted ? "uk-background-muted" : "")">
                <td class="uk-visible@m uk-table-shrink"><div class="trip-color-rect show-trip-icon" style="background-color: @trip.Color;"></div></td>
                <td>
                    @trip.ScheduleName
                    <span class="uk-hidden@s"> /<br />@trip.Departure.ToString("dd/MM/yyyy HH:mm") </span>
                </td>
                <td>
                    @trip.RouteName
                    <span class="uk-hidden@s"><br />@Html.Raw(statusMapping(trip.Status))</span>
                </td>
                <td class="uk-visible@s">@trip.Departure.ToString("dd/MM/yyyy HH:mm")</td>
                <td class="uk-visible@s">@Html.Raw(statusMapping(trip.Status))</td>
                <td class="uk-visible@s"><p class="uk-text-small">@trip.BusNumber</p></td>
                <td class="uk-visible@l">@($"{trip.VehicleProducer} {trip.VehicleModel} ({trip.VehiclePassengerCapacity})")</td>
                <td class="uk-visible@m">@trip.TotalDistance</td>
                <td class="uk-visible@m">
                    <div class="tool-cell-3 uk-float-right">
                        @if (!trip.IsDeleted)
                        {
                            @CustomExtensions.HtmlRouteIcon("uk-margin-small-right show-trip-icon")
                        }
                        @if (!trip.IsDeleted && (roleName == RoleName.Administrator || roleName == RoleName.Moderator))
                        {
                            @CustomExtensions.HtmlEditIcon("uk-margin-small-right edit-trip-icon")
                        }
                        @if (roleName == RoleName.Administrator)
                        {
                            @CustomExtensions.HtmlDeleteOrRestoreIcon(trip.IsDeleted, "delete-trip-icon")
                        }
                    </div>
                </td>
                <td class="uk-hidden@m uk-table-shrink">
                    <div class="uk-inline">
                        <span uk-icon="more-vertical"></span>
                        <div uk-dropdown="pos: left-center">
                            @if (!trip.IsDeleted)
                            {
                                @CustomExtensions.HtmlRouteIcon("uk-margin-small-right show-trip-icon")
                            }
                            @if (!trip.IsDeleted && (roleName == RoleName.Administrator || roleName == RoleName.Moderator))
                            {
                                @CustomExtensions.HtmlEditIcon("uk-margin-small-right edit-trip-icon")
                            }
                            @if (roleName == RoleName.Administrator)
                            {
                                @CustomExtensions.HtmlDeleteOrRestoreIcon(trip.IsDeleted, "delete-trip-icon")
                            }
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    App.footer.setBreadcrumbs(null);
    App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
    App.geo.route.clear();
    $(document).ready(function () {
        App.customDataTable('.trips-table.@Model.Tab.ToString().ToLower()');
        $('.show-trip-icon').click(function () {
            let _this = $(this);
            let first = _this.parents('tr').first();
            let id = first.data('route-id');
            let color = first.data('trip-color');
            App.geo.route.resetRouteLocations('@Url.Action("GetRouteLocations", "Route")', id, color);
            App.geo.route.setStartView();
            $('#clean-route-button').removeClass('uk-hidden');
        });
        $('.edit-trip-icon').click(function () {
            var id = $(this).parents('tr').data('trip-id');
            App.footer.getContent('@Url.Action("_MergeTrip", "Trip")', { tripId: id });
        });
        $('.delete-trip-icon').click(function () {
            var id = $(this).parents('tr').data('trip-id');
            App.postDataOnServer('@Url.Action("DeleteOrRestoreTrip", "Trip")', { tripId: id }, function (result) {
                App.message.showSuccessWithOk('Успешно', result.message || 'Рейс успешно удален!');
                App.footer.getContent('@Url.Action("_FullInformation", "Trip", new { tab = Model.Tab })');
            });
        });
    });

    App.geo.onClickLocation(function (obj, location) {
        let selector = "marker_" + location.marker._leaflet_id;
        let popup = location.marker.getPopup();
        if (location.marker.isPopupOpen()) {
            return;
        }
        let width = window.innerWidth * 0.75;
        width = width > 400 ? 400 : width;
        if (!popup) {
            location.marker.bindPopup('<div style="width: ' + width + 'px; min-height: 72px;" id="' + selector + '"></div>', { maxWidth: width }).openPopup();
            popup = location.marker.getPopup();
        }
        selector = '#' + selector;
        App.loadContent(selector,
            '@Url.Action("_LocationPopup" , "Home")',
            { id: location.data.id },
            function (html) {
                popup.setContent(html);
            }
        );
    });
    function editLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        App.loadContent('#current-location-card', '@Url.Action("_Location", "Geolocation")', { id: id });
        App.map.off('mousemove');
        App.map.off('click');
    }
    function deleteLocationFunction() {
        var id = $(this).parents('tr,div').first().data('location-id');
        Swal.fire({
            title: 'Удаление',
            text: 'Вы уверены, что хотите удалить?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Да',
            cancelButtonText: 'Отмена'
        }).then((result) => {
            if (result.value) {
                App.postDataOnServer('@Url.Action("DeleteOrRestoreLocation", "Geolocation")', { id: id }, function (result) {
                    App.message.showSuccessWithOk('Успешно', result.message || 'Локация успешно удалена!');
                    App.footer.getContent('@Url.Action("_FullInformation", "Geolocation", new { tab = GeolocationTab.Locations })');
                });
            }
        });
    }

    $(document).off('click', '.edit-location-icon').on('click', '.edit-location-icon', editLocationFunction);
    $(document).off('click', '.delete-location-icon').on('click', '.delete-location-icon', deleteLocationFunction);
</script>