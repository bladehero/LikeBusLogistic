@model MergeScheduleVM

<div class="uk-grid-small" uk-grid id="save-schedule-grid">
    <input type="hidden" name="id" value="@Model?.Schedule?.Id" />

    <div class="uk-margin uk-width-1-2">
        <label class="uk-form-label" for="form-stacked-text">Наименование</label>
        <div class="uk-form-controls">
            <input class="uk-input" name="name" type="text" placeholder="Наименование..." value="@Model?.Schedule?.Name">
        </div>
    </div>

    <div class="uk-margin uk-width-1-2">
        <label class="uk-form-label">Маршрут</label>
        <div class="uk-form-controls">
            @Model.Routes.SelectListWithEmptyOption(
             x => x.Id,
             x => $"{x.Name} ({x.DepartureLocationName} - {x.ArrivalLocationName})",
             "Выберите маршрут...",
             Model?.Schedule?.RouteId,
             new { @class = "uk-select", name = "routeId" },
             x => new { data_suggested_name = x.Name })
        </div>
    </div>

    <div class="uk-margin uk-width-expand"
         id="schedule-route-locations">

    </div>
</div>

<script>
    App.footer.setBreadcrumbs([
        { name: 'Расписания', url: '@Url.Action("_FullInformation", "Schedule", new { tab = ScheduleTab.Schedule })' },
        { name: '@(Model.Schedule == null ? "Добавить" : "Изменить")', url: '@Url.Action("_MergeSchedule", "Schedule")' }
    ]);
    App.geo.resetLocations('@Url.Action("GetLocations", "Home")');
    App.geo.route.clear();

    $('select[name="routeId"]').change(function () {
        let _this = this;
        let selected = $(_this.selectedOptions).first();
        var routeId = selected.val();
        App.loadContent(
            '#schedule-route-locations',
            '@Url.Action("_ScheduleRouteLocations", "Schedule")',
            { routeId: routeId }
        );

        $('input[name="name"]').val(selected.data('suggested-name'));
        App.geo.route.resetRouteLocations('@Url.Action("GetRouteLocations", "Route")', routeId);
    });
</script>